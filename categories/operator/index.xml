<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Operator - 分类 - 蜷缩的蜗牛</title><link>https://www.kbsonlong.com/categories/operator/</link><description>云原生时代运维</description><generator>Hugo 0.145.0 &amp; FixIt v0.3.20</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 24 Oct 2023 14:41:48 +0800</lastBuildDate><atom:link href="https://www.kbsonlong.com/categories/operator/index.xml" rel="self" type="application/rss+xml"/><item><title>kubebuilder2.0学习笔记——进阶使用</title><link>https://www.kbsonlong.com/posts/kubebuilder-2.0-learning-notes--advanced-use/</link><pubDate>Tue, 24 Oct 2023 14:41:48 +0800</pubDate><guid>https://www.kbsonlong.com/posts/kubebuilder-2.0-learning-notes--advanced-use/</guid><category domain="https://www.kbsonlong.com/categories/operator/">Operator</category><category domain="https://www.kbsonlong.com/categories/%E4%BA%91%E5%8E%9F%E7%94%9F/">云原生</category><description>&lt;h2 class="heading-element" id="概述">&lt;span>概述&lt;/span>
 &lt;a href="#%e6%a6%82%e8%bf%b0" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h2>&lt;p>本篇将继续深入学习kubebuilder开发，并介绍一些深入使用时遇到的问题。包括：finalizer、控制器对CRD的update status、kubebuilder注释等。并且会分享一些在开发过程中使用的小技巧&lt;/p></description></item><item><title>使用Shell实现Operaror</title><link>https://www.kbsonlong.com/posts/use-shell-to-implement-operator/</link><pubDate>Mon, 19 Jun 2023 18:07:34 +0800</pubDate><guid>https://www.kbsonlong.com/posts/use-shell-to-implement-operator/</guid><category domain="https://www.kbsonlong.com/categories/operator/">Operator</category><description>&lt;p>&lt;img loading="lazy" src='https://raw.githubusercontent.com/kbsonlong/notes_statics/master/images/20230619180724.png' alt="shell-operator架构">&lt;/p>
&lt;p>&lt;a href="https://github.com/flant/shell-operator#kubernetes"target="_blank" rel="external nofollow noopener noreferrer">Shell Operator&lt;/a> 是个冷僻又有点用的东西。方便运维监听kubernetes事件，并基于这些事件做一些简单任务处理；并且shell语言基本上大部分运维人员都懂，而不需要太高的学习成本。&lt;/p>
&lt;h2 class="heading-element" id="运行原理">&lt;span>运行原理&lt;/span>
 &lt;a href="#%e8%bf%90%e8%a1%8c%e5%8e%9f%e7%90%86" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h2>&lt;p>&lt;code>shell-operator&lt;/code> 部署在 &lt;code>Pod&lt;/code> 中。在 &lt;code>Pod&lt;/code> 中有一个 &lt;code>/hooks&lt;/code> 的一个子目录，其中存储了可执行文件，它们可以用 Bash、Python、Ruby等编写的，我们称这些可执行文件为hooks。&lt;code>Shell-opeator&lt;/code> 订阅 &lt;code>Kubernetes&lt;/code> 事件并执行这些钩子来响应我们感兴趣的事件。&lt;/p></description></item></channel></rss>